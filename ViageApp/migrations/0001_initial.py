# Generated by Django 3.2.7 on 2022-03-19 12:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_array', models.TextField(blank=True, default='EXCELLENT SERVICE,100 PERCENT TRUST,TOP ITINERARIES')),
                ('header_content', models.TextField(blank=True, default='VIAGE IS A ONE STOP PLACE TO CREATE YOUR OWN ITINERARY, PUBLISH YOUR ITINERARY TO GET FEEDBACK FROM AGENTS, CONNECT WITH AGENT ON ONE TO ONE BASIS.')),
                ('intro_header', models.TextField(blank=True, default='We Offer Some Of The Itinerary Service In Town')),
                ('intro_content', models.TextField(blank=True, default='Select the itineraries and life jingalala, create your own, publish them or just select from the existing oness')),
                ('ceo_config', models.TextField(blank=True, default='One stop platform for all travellers and agents')),
                ('by_ceo', models.TextField(blank=True, default='Raj Sanghavi')),
                ('strategy_array', models.TextField(blank=True, default='Environment Analysis $$$ Development Planning $$$ Execution & Evaluation')),
                ('strategy_content_array', models.TextField(blank=True, default='The starting point of any success story is knowing your current position in the business environment $$$ After completing the environmental analysis the next stage is to design and  plan your development strategy $$$ In this phase you will focus on executing the actions plan and evaluating the results after each marketing campaign')),
                ('strategy_array_images', models.TextField(blank=True, default='')),
                ('acceleration_content', models.TextField(blank=True, default='Accelerate Business Growth To Improve Revenue Numbers')),
                ('acceleration_content_header_array', models.TextField(blank=True, default='How Can Aria Help Your Business $$$ Great Strategic Business Planning $$$ Online Marketing Campaigns')),
                ('acceleration_content_array', models.TextField(blank=True, default='The starting point of any success story is knowing your current position in the business environment $$$ After completing the environmental analysis the next stage is to design and  plan your development strategy $$$ In this phase you will focus on executing the actions plan and evaluating the results after each marketing campaign')),
                ('contact_header', models.TextField(blank=True, default='Have Us Contact You By Filling And Submitting The Form')),
                ('contact_content', models.TextField(blank=True, default="You are just a few steps away from a personalized offer. Just fill in the form and send it to us and we'll get right back with a call to help you decide what service package works.")),
                ('contact_bullets', models.TextField(blank=True, default="It's very easy just fill in the form so we can call $$$ During the call we'll require some info about the company $$$ Don't hesitate to email us for any questions or inquiries")),
                ('interested_in_options', models.TextField(blank=True, default="It's very easy just fill in the form so we can call $$$ During the call we'll require some info about the company $$$ Don't hesitate to email us for any questions or inquiries")),
                ('agree_policy', models.TextField(blank=True, default="I agree to Viage's policy to use personal information to call me for details")),
                ('footer', models.TextField(blank=True, default='Â© 2021 All Right Reserved')),
                ('number_of_agents_message', models.TextField(blank=True, default='')),
                ('number_of_locations_message', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Config',
                'verbose_name_plural': 'Config',
            },
        ),
        migrations.CreateModel(
            name='PlaceImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.TextField(default='')),
                ('images', models.TextField(default='')),
                ('start_month', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], help_text='The month people start visiting it', max_length=256)),
                ('end_month', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], help_text='The month people stop visiting it', max_length=256)),
                ('all_months', multiselectfield.db.fields.MultiSelectField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], max_length=120)),
            ],
            options={
                'verbose_name': 'PlaceImages',
                'verbose_name_plural': 'PlaceImages',
            },
        ),
        migrations.CreateModel(
            name='TripItinerary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('trip_details', models.JSONField()),
            ],
            options={
                'verbose_name': 'TripItinerary',
                'verbose_name_plural': 'TripItinerary',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type_of_user', models.CharField(choices=[('1', 'agent'), ('2', 'customer')], help_text='Role of a user where user can be "agent" or "customer".', max_length=256)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TripPlanning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('trip_details', models.JSONField(default={})),
                ('flights', models.TextField(default='[]')),
                ('accomodation', models.TextField(default='[]')),
                ('cars', models.TextField(default='[]')),
                ('bus', models.TextField(default='[]')),
                ('train', models.TextField(default='[]')),
                ('important_things_for_trip', models.TextField(blank=True, default='', null=True)),
                ('start_budget', models.IntegerField(blank=True, default=0, null=True)),
                ('end_budget', models.IntegerField(blank=True, default=0, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TripPlanning',
                'verbose_name_plural': 'TripPlanning',
            },
        ),
    ]
